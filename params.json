{"name":"Postcode Anywhere","tagline":"Laravel API wrapper for PCA Predict formerly Postcode Anywhere","body":"# Laravel API wrapper for PCA Predict formerly Postcode Anywhere\r\n\r\n[![Build Status](https://travis-ci.org/alexpechkarev/postcode-anywhere.svg?branch=master)](https://travis-ci.org/alexpechkarev/postcode-anywhere)\r\n\r\nThis wrapper simplifies process of making API calls to [**PostcodeAnywhere**](http://www.postcodeanywhere.co.uk/)  web services.\r\nSingle line of code within your [**Laravel**](http://laravel.com/) application that's all it takes.\r\n\r\n\r\nDependency\r\n------------\r\n[**PHP cURL**] (http://php.net/manual/en/curl.installation.php) required\r\n\r\n\r\nInstallation\r\n------------\r\n\r\nTo install in console issue following command \r\n```\r\ncomposer require alexpechkarev/postcode-anywhere:dev-master\r\n```\r\n\r\nAlternatively edit `composer.json` by adding following line and issue `composer update` command in console.\r\n\r\n```php\r\n\"alexpechkarev/postcode-anywhere\": \"dev-master\"\r\n```\r\n\r\n\r\nConfiguration\r\n-------------\r\n\r\nOnce installed, register Laravel service provider, in your `config/app.php`:\r\n\r\n```php\r\n'providers' => [\r\n\t...\r\n    'PostcodeAnywhere\\PAServiceProvider',\r\n]\r\n\r\n'aliases' => [\r\n\t...\r\n    'PA' => 'PostcodeAnywhere\\PAFacade' ,\r\n]\r\n```\r\n\r\nIn console issue following command to publish configuration file `php artisan vendor:publish` .\r\nTo access the services do not forget to update the service key in configuration file. \r\n\r\nConfiguration file have multidimensional array 'services' that defines web services by type 'find' and 'retrieve' and store each services request path. Feel free to add / remove any other PCA Predict services. \r\n\r\nUsage\r\n-----\r\nHere is an example of making call to find address records for the given postcode. \r\nSee API documentation [***PostcodeAnywhere Interactive FindByPostcode (v1.00)***](http://www.postcodeanywhere.co.uk/support/webservice/postcodeanywhere/interactive/findbypostcode/1/) for required parameters and response.\r\n\r\nWithin your application call `\\PA::getResponse()` with array of parameters. \r\n\r\nWhere:\r\n- 'find' is performing action\r\n- 'FindByPostcode' is a web service as per config file\r\n- 'param' - is array of parameters required for web service. (see [***API documentation***] (http://www.postcodeanywhere.co.uk/support/webservice/postcodeanywhere/interactive/findbypostcode/1/))\r\n- 'endpoint' - is optional parameter defining type of response. When omitted defaults to `json`.\r\n\r\n```php\r\n$response = \\PA::getRespose(['find'=>'FindByPostcode', 'param'=>['postcode'=>'SW1A 1AA', 'endpoint'=>'json'] ]);\r\n```\r\n\r\nHere is another example of retrieving full address details based on the id. \r\nSee API documentation [***PostcodeAnywhere Interactive RetrieveById (v1.30)***](http://www.postcodeanywhere.co.uk/support/webservice/postcodeanywhere/interactive/retrievebyid/1.3/) for required parameters and response.\r\n\r\nWhere:\r\n- 'retrieve' is performing action\r\n- 'RetrieveById' is a web service as per config file\r\n- 'param' - is array of parameters required for web service. (see [***API documentation***] (http://www.postcodeanywhere.co.uk/support/webservice/postcodeanywhere/interactive/retrievebyid/1.3/))\r\n\r\n```php\r\n$response = \\PA::getRespose(['retrieve'=>'RetrieveById', 'param'=>['id'=>'23747212.00'] ]);\r\n```\r\n\r\n\r\n\r\nSupport\r\n-------\r\n\r\n[Found errors or to suggest improvements please open an issue on GitHub](https://github.com/alexpechkarev/postcode-anywhere/issues)\r\n\r\n\r\nLicense\r\n-------\r\n\r\nLaravel API wrapper for PCA Predict formerly Postcode Anywhere is released under the MIT License. See the bundled\r\n[LICENSE](https://github.com/alexpechkarev/postcode-anywhere/blob/master/LICENSE)\r\nfile for details.\r\n","google":"UA-66137696-1","note":"Don't delete this file! It's used internally to help with page regeneration."}